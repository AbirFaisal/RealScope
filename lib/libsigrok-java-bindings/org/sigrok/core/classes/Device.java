/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.sigrok.core.classes;

/** A generic device, either hardware or virtual. */
public class Device extends Configurable {
  protected transient long swigCPtr;
  protected transient boolean swigCMemOwnDerived;

  protected Device(long cPtr, boolean cMemoryOwn) {
    super(classesJNI.Device_SWIGSmartPtrUpcast(cPtr), true);
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Device obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwnDerived) {
        swigCMemOwnDerived = false;
        classesJNI.delete_Device(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  /** Vendor name for this device. */
public String vendor() {
    return classesJNI.Device_vendor(swigCPtr, this);
  }

  /** Model name for this device. */
public String model() {
    return classesJNI.Device_model(swigCPtr, this);
  }

  /** Version string for this device. */
public String version() {
    return classesJNI.Device_version(swigCPtr, this);
  }

  /** Serial number for this device. */
public String serial_number() {
    return classesJNI.Device_serial_number(swigCPtr, this);
  }

  /** Connection ID for this device. */
public String connection_id() {
    return classesJNI.Device_connection_id(swigCPtr, this);
  }

  /** List of the channels available on this device. */
public java.util.Vector<Channel> channels() {
  return (java.util.Vector<Channel>)classesJNI.Device_channels(swigCPtr, this);
}

  /** Channel groups available on this device, indexed by name. */
public ChannelGroupMap channel_groups() {
    return new ChannelGroupMap(classesJNI.Device_channel_groups(swigCPtr, this), true);
  }

  /** Open device. */
public void open() {
    classesJNI.Device_open(swigCPtr, this);
  }

  /** Close device. */
public void close() {
    classesJNI.Device_close(swigCPtr, this);
  }

}
