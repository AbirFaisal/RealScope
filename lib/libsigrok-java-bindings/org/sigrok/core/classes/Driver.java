/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.sigrok.core.classes;

/** A hardware driver provided by the library. */
public class Driver extends Configurable {
  protected transient long swigCPtr;
  protected transient boolean swigCMemOwnDerived;

  protected Driver(long cPtr, boolean cMemoryOwn) {
    super(classesJNI.Driver_SWIGSmartPtrUpcast(cPtr), true);
    swigCMemOwnDerived = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Driver obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwnDerived) {
        swigCMemOwnDerived = false;
        classesJNI.delete_Driver(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  /** Name of this driver. */
public String name() {
    return classesJNI.Driver_name(swigCPtr, this);
  }

  /** Long name for this driver. */
public String long_name() {
    return classesJNI.Driver_long_name(swigCPtr, this);
  }

  /** Scan options supported by this driver. */
public ConfigSet scan_options() {
    return new ConfigSet(classesJNI.Driver_scan_options(swigCPtr, this), true);
  }

  /** Scan for devices and return a list of devices found.
   * @param options Mapping of (ConfigKey, value) pairs. */
public java.util.Vector<HardwareDevice> scan(java.util.Map<ConfigKey, Variant> options) {
  ConfigMap tempoptions = new ConfigMap();
    for (java.util.Map.Entry<ConfigKey, Variant> entry : options.entrySet())
      tempoptions.set(entry.getKey(), entry.getValue());
    {
    return (java.util.Vector<HardwareDevice>)classesJNI.Driver_scan__SWIG_0(swigCPtr, this, ConfigMap.getCPtr(tempoptions), tempoptions);
}
  }

  /** Scan for devices and return a list of devices found.
   * @param options Mapping of (ConfigKey, value) pairs. */
public java.util.Vector<HardwareDevice> scan() {
  return (java.util.Vector<HardwareDevice>)classesJNI.Driver_scan__SWIG_1(swigCPtr, this);
}

}
