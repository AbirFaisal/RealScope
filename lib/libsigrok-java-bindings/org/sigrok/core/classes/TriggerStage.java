/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.sigrok.core.classes;

/** A stage in a trigger configuration. */
public class TriggerStage {
  protected transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected TriggerStage(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TriggerStage obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        classesJNI.delete_TriggerStage(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  /** Index number of this stage. */
public int number() {
    return classesJNI.TriggerStage_number(swigCPtr, this);
  }

  /** List of match conditions on this stage. */
public TriggerMatchVector matches() {
    return new TriggerMatchVector(classesJNI.TriggerStage_matches(swigCPtr, this), true);
  }

  /** Add a new match condition to this stage.
   * @param type TriggerMatchType to apply.
   * @param value Threshold value.
   * @param channel Channel to match on. */
public void add_match(Channel channel, TriggerMatchType type) {
    classesJNI.TriggerStage_add_match__SWIG_0(swigCPtr, this, Channel.getCPtr(channel), channel, TriggerMatchType.getCPtr(type), type);
  }

  /** Add a new match condition to this stage.
   * @param type TriggerMatchType to apply.
   * @param value Threshold value.
   * @param channel Channel to match on. */
public void add_match(Channel channel, TriggerMatchType type, float value) {
    classesJNI.TriggerStage_add_match__SWIG_1(swigCPtr, this, Channel.getCPtr(channel), channel, TriggerMatchType.getCPtr(type), type, value);
  }

}
