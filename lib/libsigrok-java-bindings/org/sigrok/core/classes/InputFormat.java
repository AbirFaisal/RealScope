/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.sigrok.core.classes;

/** An input format supported by the library. */
public class InputFormat {
  protected transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected InputFormat(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(InputFormat obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        classesJNI.delete_InputFormat(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  /** Name of this input format. */
public String name() {
    return classesJNI.InputFormat_name(swigCPtr, this);
  }

  /** Description of this input format. */
public String description() {
    return classesJNI.InputFormat_description(swigCPtr, this);
  }

  /** A list of preferred file name extensions for this file format. */
public SWIGTYPE_p_std__vectorT_std__string_t extensions() {
    return new SWIGTYPE_p_std__vectorT_std__string_t(classesJNI.InputFormat_extensions(swigCPtr, this), true);
  }

  /** Options supported by this input format. */
public OptionMap options() {
    return new OptionMap(classesJNI.InputFormat_options(swigCPtr, this), true);
  }

  /** Create an input using this input format.
   * @param options Mapping of (option name, value) pairs. */
public Input create_input(VariantMap options) {
    long cPtr = classesJNI.InputFormat_create_input__SWIG_0(swigCPtr, this, VariantMap.getCPtr(options), options);
    return (cPtr == 0) ? null : new Input(cPtr, true);
  }

  /** Create an input using this input format.
   * @param options Mapping of (option name, value) pairs. */
public Input create_input() {
    long cPtr = classesJNI.InputFormat_create_input__SWIG_1(swigCPtr, this);
    return (cPtr == 0) ? null : new Input(cPtr, true);
  }

}
