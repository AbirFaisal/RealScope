/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.sigrok.core.classes;

/** Base class for objects which wrap an enumeration value from libsigrok. */
public class EnumValueLogLevel {
  protected transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected EnumValueLogLevel(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(EnumValueLogLevel obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        throw new UnsupportedOperationException("C++ destructor does not have public access");
      }
      swigCPtr = 0;
    }
  }

  /** The integer constant associated with this value. */
public int id() {
    return classesJNI.EnumValueLogLevel_id(swigCPtr, this);
  }

  /** The name associated with this value. */
public String name() {
    return classesJNI.EnumValueLogLevel_name(swigCPtr, this);
  }

  public static LogLevel get(int id) {
    long cPtr = classesJNI.EnumValueLogLevel_get(id);
    return (cPtr == 0) ? null : new LogLevel(cPtr, false);
  }

  public static SWIGTYPE_p_std__vectorT_sigrok__LogLevel_const_p_t values() {
    return new SWIGTYPE_p_std__vectorT_sigrok__LogLevel_const_p_t(classesJNI.EnumValueLogLevel_values(), true);
  }

}
