/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.sigrok.core.classes;

public class HardwareDeviceVector {
  protected transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected HardwareDeviceVector(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(HardwareDeviceVector obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        classesJNI.delete_HardwareDeviceVector(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public HardwareDeviceVector() {
    this(classesJNI.new_HardwareDeviceVector__SWIG_0(), true);
  }

  public HardwareDeviceVector(long n) {
    this(classesJNI.new_HardwareDeviceVector__SWIG_1(n), true);
  }

  public long size() {
    return classesJNI.HardwareDeviceVector_size(swigCPtr, this);
  }

  public long capacity() {
    return classesJNI.HardwareDeviceVector_capacity(swigCPtr, this);
  }

  public void reserve(long n) {
    classesJNI.HardwareDeviceVector_reserve(swigCPtr, this, n);
  }

  public boolean isEmpty() {
    return classesJNI.HardwareDeviceVector_isEmpty(swigCPtr, this);
  }

  public void clear() {
    classesJNI.HardwareDeviceVector_clear(swigCPtr, this);
  }

  public void add(SWIGTYPE_p_std__shared_ptrT_sigrok__HardwareDevice_t x) {
    classesJNI.HardwareDeviceVector_add(swigCPtr, this, SWIGTYPE_p_std__shared_ptrT_sigrok__HardwareDevice_t.getCPtr(x));
  }

  public SWIGTYPE_p_std__shared_ptrT_sigrok__HardwareDevice_t get(int i) {
    return new SWIGTYPE_p_std__shared_ptrT_sigrok__HardwareDevice_t(classesJNI.HardwareDeviceVector_get(swigCPtr, this, i), false);
  }

  public void set(int i, SWIGTYPE_p_std__shared_ptrT_sigrok__HardwareDevice_t val) {
    classesJNI.HardwareDeviceVector_set(swigCPtr, this, i, SWIGTYPE_p_std__shared_ptrT_sigrok__HardwareDevice_t.getCPtr(val));
  }

}
