/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.sigrok.core.classes;

/** Trigger match type. */
public class TriggerMatchType extends EnumValueTriggerMatchType {
  protected transient long swigCPtr;

  protected TriggerMatchType(long cPtr, boolean cMemoryOwn) {
    super(classesJNI.TriggerMatchType_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TriggerMatchType obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        classesJNI.delete_TriggerMatchType(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static TriggerMatchType getZERO() {
    long cPtr = classesJNI.TriggerMatchType_ZERO_get();
    return (cPtr == 0) ? null : new TriggerMatchType(cPtr, false);
  }

  public static TriggerMatchType getONE() {
    long cPtr = classesJNI.TriggerMatchType_ONE_get();
    return (cPtr == 0) ? null : new TriggerMatchType(cPtr, false);
  }

  public static TriggerMatchType getRISING() {
    long cPtr = classesJNI.TriggerMatchType_RISING_get();
    return (cPtr == 0) ? null : new TriggerMatchType(cPtr, false);
  }

  public static TriggerMatchType getFALLING() {
    long cPtr = classesJNI.TriggerMatchType_FALLING_get();
    return (cPtr == 0) ? null : new TriggerMatchType(cPtr, false);
  }

  public static TriggerMatchType getEDGE() {
    long cPtr = classesJNI.TriggerMatchType_EDGE_get();
    return (cPtr == 0) ? null : new TriggerMatchType(cPtr, false);
  }

  public static TriggerMatchType getOVER() {
    long cPtr = classesJNI.TriggerMatchType_OVER_get();
    return (cPtr == 0) ? null : new TriggerMatchType(cPtr, false);
  }

  public static TriggerMatchType getUNDER() {
    long cPtr = classesJNI.TriggerMatchType_UNDER_get();
    return (cPtr == 0) ? null : new TriggerMatchType(cPtr, false);
  }

}
